{
    "name": "lva-edge-vscode-extension",
    "description": "LVA Edge VS Code Extension",
    "version": "0.0.1",
    "engines": {
        "vscode": "^1.38.0"
    },
    "categories": [
        "Azure",
        "Extension Packs"
    ],
    "activationEvents": [
        "onWebviewPanel:lvaTopologyEditor",
        "onView:moduleExplorer"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/Azure/lva-edge-vscode-extension"
    },
    "main": "./out/Extension/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "lvaTopologyEditor.createGraph",
                "title": "%lva-edge.command.openSampleGraph.title%",
                "category": "%lva-edge.command.category%"
            },
            {
                "command": "moduleExplorer.refresh",
                "title": "Refresh",
                "icon": "$(refresh)"
            },
            {
                "command": "moduleExplorer.resetConnection",
                "title": "Reset connection"
            },
            {
                "command": "moduleExplorer.createGraph",
                "title": "%createGraphButton%",
                "icon": "$(add)"
            },
            {
                "command": "moduleExplorer.editGraph",
                "title": "%editGraphButton%"
            },
            {
                "command": "moduleExplorer.deleteGraph",
                "title": "%deleteGraphButton%"
            },
            {
                "command": "moduleExplorer.createInstance",
                "title": "%createGraphInstanceButton%",
                "icon": "$(add)"
            },
            {
                "command": "moduleExplorer.editInstance",
                "title": "%editInstanceButton%"
            },
            {
                "command": "moduleExplorer.activateInstance",
                "title": "%activateInstanceButton%",
                "enablement": "view == moduleExplorer && viewItem == InstanceItemContextInactive"
            },
            {
                "command": "moduleExplorer.deactivateInstance",
                "title": "%deactivateInstanceButton%",
                "enablement": "view == moduleExplorer && viewItem == InstanceItemContextActive"
            },
            {
                "command": "moduleExplorer.deleteInstance",
                "title": "%deleteInstanceButton%"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "moduleExplorer",
                    "title": "%lva-edge.views.moduleExplorer.name%",
                    "icon": "Extension/resources/instance.svg"
                }
            ]
        },
        "views": {
            "explorer": [
                {
                    "id": "moduleExplorer",
                    "name": "%lva-edge.views.moduleExplorer.name%"
                }
            ]
        },
        "menus": {
            "view/title": [
                {
                    "command": "moduleExplorer.refresh",
                    "when": "view == moduleExplorer",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "moduleExplorer.resetConnection",
                    "when": "view == moduleExplorer && viewItem == hubItemContext",
                    "group": "inline"
                },
                {
                    "command": "moduleExplorer.deleteGraph",
                    "when": "view == moduleExplorer && viewItem == graphItemContext"
                },
                {
                    "command": "moduleExplorer.editGraph",
                    "when": "view == moduleExplorer && viewItem == graphItemContext"
                },
                {
                    "command": "moduleExplorer.activateInstance",
                    "when": "view == moduleExplorer && viewItem =~ /^InstanceItemContext.*$/"
                },
                {
                    "command": "moduleExplorer.deactivateInstance",
                    "when": "view == moduleExplorer && viewItem =~ /^InstanceItemContext.*$/"
                },
                {
                    "command": "moduleExplorer.deleteInstance",
                    "when": "view == moduleExplorer && viewItem =~ /^InstanceItemContext.*$/"
                },
                {
                    "command": "moduleExplorer.editInstance",
                    "when": "view == moduleExplorer && viewItem =~ /^InstanceItemContext.*$/"
                },
                {
                    "command": "moduleExplorer.createGraph",
                    "when": "view == moduleExplorer && viewItem == graphListContext",
                    "group": "inline"
                },
                {
                    "command": "moduleExplorer.createGraph",
                    "when": "view == moduleExplorer && viewItem == graphListContext"
                },
                {
                    "command": "moduleExplorer.createInstance",
                    "when": "view == moduleExplorer && viewItem == graphItemContext",
                    "group": "inline"
                },
                {
                    "command": "moduleExplorer.createInstance",
                    "when": "view == moduleExplorer && viewItem == graphItemContext"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "moduleExplorer",
                "contents": "No Azure IoT Hub connection string has been provided.\n[Enter Connection String](command:moduleExplorer.setConnectionString)"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "npm run compile-react && npm run compile-ext",
        "compile-react": "react-scripts build",
        "eject-react": "react-scripts eject",
        "compile-ext": "tsc -p src/Extension/tsconfig.json",
        "dev": "set PORT=3008 && react-scripts start",
        "lint": "eslint . --ext .ts,.tsx",
        "format": "prettier --write \"./**/*.{js,jsx,json,ts,tsx}\" \"!./build\"",
        "create-definitions": "tsc -p ./src/Tools/DefinitionGenerator/tsconfig.json && node ./DefinitionGenerator/Tools/DefinitionGenerator/entry.js",
        "refreshVSToken": "vsts-npm-auth -config .npmrc"
    },
    "dependencies": {
        "@types/keytar": "^4.4.2",
        "@vienna/react-dag-editor": "^1.80.2",
        "azure-iothub": "^1.12.4",
        "dagre": "^0.8.5",
        "eslint": "^6.8.0",
        "keytar": "^6.0.1",
        "lodash": "^4.17.20",
        "office-ui-fabric-react": "^7.117.1",
        "react": "^16.13.1",
        "react-accessible-accordion": "^3.3.3",
        "react-accessible-tree": "^1.0.3",
        "react-dom": "^16.13.1",
        "react-scripts": "^3.4.3"
    },
    "devDependencies": {
        "@types/dagre": "^0.7.44",
        "@types/lodash": "^4.14.155",
        "@types/node": "^12.12.0",
        "@types/react": "^16.9.36",
        "@types/react-dom": "^16.9.8",
        "@types/uuid": "^8.0.0",
        "@types/vscode": "^1.38.0",
        "@typescript-eslint/eslint-plugin": "^3.0.2",
        "@typescript-eslint/parser": "^3.0.2",
        "eslint-plugin-react-hooks": "^4.1.0",
        "prettier": "^2.0.5",
        "typescript": "^3.9.4"
    },
    "browserslist": {
        "production": [
            ">0.2%",
            "not dead",
            "not op_mini all"
        ],
        "development": [
            "last 1 chrome version",
            "last 1 firefox version",
            "last 1 safari version"
        ]
    }
}
