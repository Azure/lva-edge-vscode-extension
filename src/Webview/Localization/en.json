{
    "copy": "Copy",
    "addAction": "Add",
    "delete": "Delete",
    "copySelected": "Copy selected",
    "deleteSelected": "Delete selected",
    "paste": "Paste",
    "browserNotSupported": "Browser not supported",
    "sidebarHeadingParameters": "Parameters",
    "sources": "Sources",
    "manageParametersButtonText": "Manage parameters",
    "processors": "Processors",
    "sinks": "Sinks",
    "saveButtonText": "Save",
    "nodeContainerNodeType": "{0} name:",
    "saveAndActivateButtonText": "Save and activate",
    "cancelButtonText": "Cancel",
    "closeButtonText": "Close",
    "toolbarHideLeftSidebar": "Hide panel",
    "toolbarShowLeftSidebar": "Show panel",
    "toolbarAutoLayout": "Auto layout",
    "toolbarToHorizontal": "Change orientation to horizontal",
    "toolbarToVertical": "Change orientation to vertical",
    "ToolbarValidationErrors": "View errors",
    "toolbarValidationTextSingular": "There is {0} error to resolve. ",
    "toolbarValidationTextPlural": "There are {0} errors to resolve. ",
    "sampleSelectorButtonText": "Try sample topologies",
    "sampleSelectorTitle": "Select a sample topology",
    "sampleSelectorText": "Jump start your topology creation with our built-in samples.",
    "sampleSelectorDropdownLabel": "Topology name",
    "sampleSelectorDropdownPlaceholderText": "Select a sample topology",
    "sampleSelectorLoadSampleButtonText": "Load sample",
    "sampleSelectorOverwriteConfirmationTitle": "Load sample topology?",
    "sampleSelectorOverwriteConfirmationText": "Any existing changes will be lost if you load a sample.",
    "sampleSelectorOverwriteConfirmButtonText": "Proceed",
    "sampleSelectorOverwriteKeepButtonText": "Cancel",
    "sample.group.continuousRecording": "Continuous Video Recording",
    "sample.group.eventBasedVideRecording": "Event-based Video Recording",
    "sample.group.motionDetection": "Motion Detection",
    "sample.group.extensions": "Extensions",
    "sample.group.computerVision": "Computer Vision",
    "sample.group.aiComposition": "AI Composition",
    "sample.cvr-asset": "Record to AMS Asset",
    "sample.cvr-with-grpcExtension": "Record using grpcExtension",
    "sample.cvr-with-httpExtension": "Record using httpExtension",
    "sample.cvr-with-motion": "Record on motion detection",
    "sample.audio-video": "Record audio with video",
    "sample.evr-grpcExtension-assets": "Record using grpcExtension",
    "sample.evr-httpExtension-assets": "Record using httpExtension",
    "sample.evr-hubMessage-assets": "Record to AMS assets based on inference events",
    "sample.evr-hubMessage-files": "Record to local files based on inference events",
    "sample.evr-motion-assets-files": "Record motion events to AMS assets and local files",
    "sample.evr-motion-assets": "Record motion events to AMS assets",
    "sample.evr-motion-files": "Record motion events to local files",
    "sample.motion-detection": "Publish motion events to Iot Hub",
    "sample.motion-with-grpcExtension": "ExtensionAnalyze motion events using grpcExtension",
    "sample.motion-with-httpExtension": "Analyze motion events using httpExtension",
    "sample.grpcExtension": "Analyze video using grpcExtension",
    "sample.httpExtension": "Analyze video using httpExtension",
    "sample.httpExtensionOpenVINO": "Analyze video with Intel OpenVINO Model Server",
    "sample.lva-spatial-analysis": "Analyze video with Computer Vision for Spatial Analysis",
    "sample.ai-composition": "Record to AMS asset using multiple AI models",
    "sidebarTopologyComponentTitle": "Topology components",
    "sidebarTopologyComponentText": "Select a source, processor, and sink to build a topology.",
    "sidebarGraphTopologyNameLabel": "Topology name",
    "sidebarGraphInstanceNameLabel": "Instance name",
    "sidebarGraphNamePlaceholder": "Enter a name",
    "sidebarGraphDescriptionLabel": "Description",
    "sidebarGraphDescriptionPlaceholder": "Enter a description",
    "sidebarGraphTopologyNameMissing": "The topology name cannot be empty.",
    "sidebarGraphInstanceNameMissing": "The instance name cannot be empty.",
    "sidebarGraphInstanceParameterText": "Enter values for the parameters of this instance.",
    "sidebarGraphInstanceParameterPlaceholder": "Enter a {0} value.",
    "sidebarGraphInstanceParameterMissing": "This parameter value cannot be empty.",
    "sidebarGraphInstanceParameterDefaultText": "The default value is: {0}",
    "ariaPortLabelConnectedToNodes": "Connected to {0}",
    "ariaNodeLabelNodeNameWithPorts": "Node named {0} with {1}",
    "ariaNodeLabelNodeDescription": "Node named {0}",
    "ariaHasInputPortLabel": "Input port",
    "ariaHasOutputPortLabel": "Output port",
    "ariaHasBothPortsLabel": "Input and output port",
    "ariaInputPortDescription": "Input port of {0}",
    "ariaOutputPortDescription": "Output port of {0}",
    "errorPanelHeading": "Errors",
    "errorPanelOnlyOneNodeOfTypeAllowedText": "Only one node of type {0} is allowed per graph.",
    "errorPanelMissingPropertyText": "Missing property [node: {0}] on [property : {1}].",
    "errorParameterPanelMissingText": "Missing parameter value [parameter : {0}].",
    "errorPanelServerErrorText": "Server error",
    "errorPanelServerErrorNodeNameText": " [Node: {0}]",
    "errorPanelServerErrorPropertyText": " - [Property : {0}]",
    "errorPanelGraphNotConnectedText": "Graph is not connected (contains orphaned nodes).",
    "errorPanelNodesHaveToBeDirectlyDownstreamText": "Nodes of type {0} have to be directly downstream of {1}.",
    "errorPanelHelpLinkText": "Learn more",
    "nodesCannotBeDirectlyDownstream": "Nodes of type {0} cannot be directly downstream of {1}.",
    "nodesCannotBeAnywhereDownstream": "Nodes of type {0} cannot be downstream of {1}.",
    "propertyEditorNoneValueLabel": "None",
    "propertyEditorBooleanTrueLabel": "True",
    "propertyEditorBooleanFalseLabel": "False",
    "newParameter": "New parameter",
    "notValidUrl": "The value must be a valid URL.",
    "parameters": "Parameters",
    "parameterEditorTitle": "Define value for {0}",
    "parameterEditorCloseButtonAriaLabel": "Close parameter editor.",
    "parameterEditorText": "Create or select a parameter to insert into your value format.",
    "parameterEditorPivotAriaLabel": "Switch between basic and advanced parameter editor.",
    "parameterEditorPivotBasicTabLabel": "Basic",
    "parameterEditorChoiceAdvancedLabel": "Advanced",
    "parameterEditorUseParameterInPropertyButtonText": "Set",
    "parameterEditorAdvancedEditorInsertLinkText": "Insert",
    "parameterEditorAdvancedEditorMainInputLabel": "Value format",
    "parameterEditorAdvancedEditorMainInputPlaceholder": "Enter value format (ex: ${parameterName}-${System.DateTime})",
    "parameterEditorCreateFormNameFieldLabel": "Parameter name",
    "parameterEditorCreateFormNameFieldPlaceholder": "Enter parameter name",
    "parameterEditorCreateFormTypeDropdownLabel": "Parameter type",
    "parameterEditorCreateFormTypeDropdownPlaceholder": "Select a parameter type",
    "parameterEditorCreateFormDefaultFieldLabel": "Default value",
    "parameterEditorCreateFormDefaultFieldPlaceholder": "Enter default value",
    "parameterEditorParameterListSearchLabel": "Filter by name",
    "parameterEditorParameterListFilteredAnnounce": "Number of parameters after filter applied: {0}",
    "parameterEditorParameterListAddButtonLabel": "Add new",
    "parameterEditorBasicEditorSourceChoiceLabel": "Parameter source",
    "parameterEditorChoiceCreateNewLabel": "Create new",
    "parameterEditorChoiceUseExistingLabel": "Select existing",
    "propertyEditorCloseButtonAriaLabel": "Click to close the property editor.",
    "propertyEditorOverflowMenuTitle": "Show more options for this property.",
    "propertyEditorOverflowMenuAriaLabel": "Click to show more options for this property.",
    "propertyEditorOverflowMenuUseParameterText": "Parameterize",
    "propertyEditorOverflowMenuEditParameterText": "Edit parameterization",
    "propertyEditorOverflowMenuRemoveParameterText": "Remove parameterization",
    "propertyEditorInfoButtonTitle": "Show more information",
    "propertyEditorInfoButtonAriaLabel": "Click to view more information about this property.",
    "propertyEditorValidationUndefined": "This value cannot be undefined.",
    "propertyEditorValidationEmpty": "This value cannot be empty.",
    "propertyEditorValidationUndefinedOrEmpty": "This value cannot be undefined or empty.",
    "parameterAlreadyExists": "This parameter name already exists.",
    "propertyEditorValidationInvalidJSON": "The entered JSON is not valid.",
    "nameNotAvailableError": "Name is not available.",
    "hideForm": "Hide form",
    "editParametersEditButtonText": "Edit",
    "editParametersCancelButtonText": "Cancel",
    "editParametersDeleteButtonText": "Delete",
    "editParametersRemoveButtonText": "Remove",
    "editParametersSaveButtonText": "Save",
    "deleteParameterDialogTitle": "Remove parameter",
    "deleteParameterDialogText": "Removing the parameter sets all linked properties to empty and may cause graph errors. Please confirm removal of parameter.",
    "deleteParameterDialogLinkedProperties": "Linked properties",
    "minMaxLengthError": "Property must have a length between {0} - {1}.",
    "regexPatternError": "Value must follow regex '{0}'.",
    "minMaxError": "The property value must be between {0} - {1} {2}.",
    "maxLengthError": "Property must have a length less than {0}.",
    "minValueError": "Value must be greater than {0}.",
    "valueMustBeNumbersError": "Value must be a valid number.",
    "EdgePropertyPanelTitle": "Connection settings",
    "EdgePropertyPanelFromLabel": "From",
    "EdgePropertyPanelToLabel": "To",
    "EdgePropertyPanelTypeDropdownLabel": "Output type",
    "OutputSelectorsAllSelected": "All",
    "OutputSelectorsNoneSelectedMessage": "Selecting none of the output types will be treated as sending all applicable data from the sender node."
}
